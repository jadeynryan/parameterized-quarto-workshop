---
title: "🏁 Summary<br>![](../images/cascadia-jr-quarto.webp){width=5em}"
format: revealjs
---

## Learning objective 1

**Understand what parameterized reporting is and when it is useful.**

. . .

**Like very fancy custom functions:**

::: incremental

- Function &rarr; `.qmd` template

- Input &rarr; parameters

- Output &rarr; rendered reports
:::

. . . 

**Useful for creating variations of the same report:**

-   spatial: country, state, county, or city

-   temporal: year, month or other time period

-   breeds, species, diseases, water bodies, customers, trials, etc.

. . .

::: callout-note
We only covered reports, but you can also parameterize `revealjs` presentations! See this [Jumping Rivers blog post](https://www.jumpingrivers.com/blog/r-parameterised-presentations-quarto/) about it.
:::

## Learning objective 2a

**Convert a Quarto document into a parameterized template** and render all variations.

::: incremental
- Include default `params:` in YAML
    
- Replace hard-coded values with `params$pet_type`

  - **YAML**: 
  
    ``` {yaml}
    ---
    title: "Report about `r params$pet_type`"
    params:
      pet_type: "cats"
    ---
    ```
    
  - **Inline R code**: 
  
    ```{markdown}
    I like **`r params$pet_type`**.
    ```
    
  - **Code chunks**: 
  
    ``` r
    pets |> 
        dplyr::filter(pet_type == params$pet_type)
    ```
:::

## Learning objective 2b

Convert a Quarto document into a parameterized template and **render all variations of the report at once using [{quarto}](https://quarto-dev.github.io/quarto-r/) and [{purrr}](https://purrr.tidyverse.org/). **

::: {.fragment}
1. Get all unique parameter combinations into a dataframe:

```{r}
#| echo: false
pet_reports <- readRDS("../data/pet-reports.RDS")
```


```{r}
head(pet_reports, 2)
```

:::

::: {.fragment}
2. Use dataframe in `pwalk()` with `quarto_render()`:

```{r}
#| eval: false
purrr::pwalk(
  pet_reports,
  quarto::quarto_render,
  input = here::here("pet_template.qmd"),
  .progress = TRUE
)
```
:::

## Learning objective 3a

Generate multiple format outputs from the same template using **conditional content**, conditional code execution, and custom styling.

Create a div, span, or non-executable code block with one option from each of the below columns:

`{.class attribute="format"}`

:::: {.columns}

::: {.column width="30%"}
**Class**

- `.content-visible`
- `.content-hidden`
:::

::: {.column width="30%"}
**Attribute**

- `when-format="___"`
- `unless-format="___"`
:::

::: {.column width="30%"}
**Format**

- `latex` or `pdf`
- `epub`
- `html` or `revealjs`
- `markdown`
:::
::::

## Learning objective 3b

Generate multiple format outputs from the same template using conditional content, **conditional code execution**, and custom styling.

```r
#| label: setup

format <- knitr::opts_knit$get("rmarkdown.pandoc.to")
```

```r
#| label: interactive-plot
#| eval: !expr format == "html"

# plotly code
```

```r
#| label: static-plot
#| eval: !expr format %in% c("latex", "docx")

# ggplot2 code
```

:::

## Learning objective 3c

Generate multiple format outputs from the same template using conditional content, conditional code execution, and **custom styling**.

## Thank you!

::: columns
::: {.column width="65%"}
🏡 **Home for all workshop materials**:
[jadeyryan.quarto.pub/cascadia-quarto/](https://jadeyryan.quarto.pub/cascadia-quarto/)

\

🎥 **Recordings from previous workshops & talks**:  
[links in GitHub repo](https://github.com/jadeynryan/parameterized-quarto-workshop?tab=readme-ov-file#workshops) or [my YouTube playlist](https://youtube.com/playlist?list=PLzjGoNexcyYaDUVCg4MQDtMXLl2F5HE3B&si=-y0jQfCYyRAQjI1B)

![](images/mts.jpg){width="600"
fig-alt="From left to right, Mai, Tai, and Skye. Three snowshoe cats cuddling in their warming beds."
style="border-radius:1em"}
:::

::: {.column width="35%"}
**Let's stay connected!**

{{< fa link size=xl >}} [jadeyryan.com](https://jadeyryan.com)

{{< fa brands mastodon size=xl >}} [\@jadeynryan](https://fosstodon.org/@jadeynryan)

{{< fa brands linkedin size=xl >}} [linkedin.com/in/jadey-ryan](https://www.linkedin.com/in/jadey-ryan)

{{< fa brands github size=xl >}} [jadeynryan](https://github.com/jadeynryan/)

{{< fa brands etsy size=xl >}} [thecodingcats.etsy.com](https://thecodingcats.etsy.com/)
:::
:::
