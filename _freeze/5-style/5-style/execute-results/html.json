{
  "hash": "fc09e6ce8648753e60b40ae3abcce0bc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Styling your reports<br>![](../images/cascadia-jr-quarto.webp){width=5em}\"\nformat: revealjs\n---\n\n\n\n# HTML {.section}\n\n## Bootswatch themes\n\nChoose from or customize one of 25 [Bootswatch](https://bootswatch.com/) themes.\n\n\\\n\n. . .\n\n**Set the theme** in the YAML under the `html` key:\n\n``` yaml\nformat:\n  html:\n    theme: flatly\n```\n\n\\\n\n. . .\n\n**Customize a theme** by including a custom `.scss` file under the `theme` key:\n\n``` yaml\nformat:\n  html:\n    theme: [flatly, theme.scss]\n```\n\n\\\n\n[HTML theming Quarto docs](https://quarto.org/docs/output-formats/html-themes.html)\n\n\n## SCSS files\n\nSCSS files have the following form:\n\n``` scss\n/*-- scss:defaults --*/\n$h2-font-size:          1.6rem !default;\n$headings-font-weight:  500 !default;\n$body-color:            $gray-700 !default;\n\n/*-- scss:rules --*/\nh1, h2, h3, h4, h5, h6 {\n  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);\n}\n```\n\n\\\n\nDefine [**SASS variables**](https://quarto.org/docs/output-formats/html-themes.html#sass-variables) in the `defaults` section.\n\nDeclare [**CSS rules**](https://www.w3schools.com/css/css_syntax.ASP) in the `rules` section.\n\n\\\n\n[Bootstrap docs](https://getbootstrap.com/docs/5.1/customize/sass/)\n\n[Default Bootstrap variables](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss)\n\n## Browser developer tools\n\n::: r-stack\n![](images/browser-tools.png){.fragment\nfig-alt=\"Screenshot of browser developer tools inspecting the Quarto title meta heading of an HTML report.\"\nwidth=\"1300\" fig-align=\"left\"}\n\n![](images/browser-tools-modified.png){.fragment\nfig-alt=\"Screenshot of browser developer tools with the CSS declaration modified to test style changes.\"\nwidth=\"1300\" fig-align=\"left\"}\n:::\n\n# MS Word {.section}\n\n## Reference document\n\nCreate and modify a *reference document*, which is a special kind of template.\n\n. . .\n\n1. Run the following in the Terminal to create the reference doc:\n\n```{.bash filename=\"Terminal\"}\nquarto pandoc -o word-template.docx --print-default-data-file reference.docx\n```\n\n. . .\n\n2. Open `word-template.docx` and modify the styles.\n\n. . .\n\n3. Set this template in the YAML under the `reference-doc:` key:\n\n```yaml\nformat:\n  docx:\n    reference-doc: word-template.docx\n```\n\n. . .\n\n[MS Word template Quarto docs](https://quarto.org/docs/output-formats/ms-word-templates.html)\n\n[MS documentation on modifying styles](https://support.microsoft.com/en-us/office/customize-or-create-new-styles-d38d6e47-f6fc-48eb-a607-1eb120dec563)\n\n## Need your report as a PDF?\n\nFormat in MS Word and then convert `.docx` to `.pdf` with Adobe Acrobat.\n\nor...\n\n- Learn how to format PDFs in the Quarto docs: [PDF basics](https://quarto.org/docs/output-formats/pdf-basics.html) & [PDF options](https://quarto.org/docs/reference/formats/pdf.html).\n\n- Try [Typst](https://quarto.org/docs/output-formats/typst.html), an open-source markup-based typesetting system, new in Quarto 1.4.\n\n# üí™üèº Exercise {.exercise}\n\n**Play around with the HTML and MS Word styling of a report of your choosing.**\n\n1. Open a new `.qmd` or choose one from a previous exercise.\n2. Add a [Bootswatch](https://bootswatch.com/) theme to the YAML and re-render.\n3. Create a MS Word reference doc, [modify a style](https://support.microsoft.com/en-us/office/customize-or-create-new-styles-d38d6e47-f6fc-48eb-a607-1eb120dec563), add it to the YAML, and re-render.\n\n```{.bash}\n# Run in the Terminal\n\nquarto pandoc -o word-template.docx --print-default-data-file reference.docx\n```\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_d5257c4c\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">07</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}